#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º Role –Ω–∞ Yandex Cloud
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ò–ó–ú–ï–ù–ò–¢–ï –≠–¢–ò –ó–ù–ê–ß–ï–ù–ò–Ø)
SERVER_IP="51.250.4.162"                    # IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
SERVER_USER="yc-user"            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
SSH_KEY=""                      # –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}–°–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º Role${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 --server IP [--key PATH] [--user USER] –ö–û–ú–ê–ù–î–ê"
    echo ""
    echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    echo "  --server IP       IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
    echo "  --user USER       –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: yc-user)"
    echo "  --key PATH        –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  status            –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  start             –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "  stop              –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "  restart           –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    echo "  logs [LINES]      –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 50 —Å—Ç—Ä–æ–∫)"
    echo "  logs-live         –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  monitor           –û—Ç–∫—Ä—ã—Ç—å –º–æ–Ω–∏—Ç–æ—Ä PM2"
    echo "  backup            –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
    echo "  health            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  info              –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "  nginx ACTION      –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Nginx (status|restart|reload)"
    echo "  cleanup           –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
    echo "  shell             –û—Ç–∫—Ä—ã—Ç—å SSH —Å–µ—Å—Å–∏—é"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 --server 1.2.3.4 status"
    echo "  $0 --server 1.2.3.4 --key ~/.ssh/id_rsa logs 100"
    echo "  $0 --server 1.2.3.4 nginx restart"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
COMMAND=""
COMMAND_ARGS=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --server)
            SERVER_IP="$2"
            shift 2
            ;;
        --user)
            SERVER_USER="$2"
            shift 2
            ;;
        --key)
            SSH_KEY="$2"
            shift 2
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            if [ -z "$COMMAND" ]; then
                COMMAND="$1"
            else
                COMMAND_ARGS="$COMMAND_ARGS $1"
            fi
            shift
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ -z "$SERVER_IP" ]; then
    error "–ù–µ —É–∫–∞–∑–∞–Ω IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --server IP"
fi

if [ -z "$COMMAND" ]; then
    show_help
    exit 1
fi

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ SSH –∫–æ–º–∞–Ω–¥—ã
SSH_CMD="ssh"
if [ ! -z "$SSH_KEY" ]; then
    if [ ! -f "$SSH_KEY" ]; then
        error "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY"
    fi
    SSH_CMD="ssh -i $SSH_KEY"
fi

SSH_TARGET="$SERVER_USER@$SERVER_IP"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
check_connection() {
    if ! $SSH_CMD -o ConnectTimeout=10 $SSH_TARGET "echo 'OK'" >/dev/null 2>&1; then
        error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SSH_TARGET"
    fi
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
case $COMMAND in
    status)
        log "üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞ $SERVER_IP..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
echo -e "\033[0;34müìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Role\033[0m"
echo ""

# PM2 —Å—Ç–∞—Ç—É—Å
echo -e "\033[1;33müîß PM2 –ü—Ä–æ—Ü–µ—Å—Å—ã:\033[0m"
if command -v pm2 &> /dev/null; then
    pm2 list
else
    echo "PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi
echo ""

# Nginx —Å—Ç–∞—Ç—É—Å
echo -e "\033[1;33müåê Nginx:\033[0m"
if sudo systemctl is-active --quiet nginx; then
    echo -e "\033[0;32m‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω\033[0m"
else
    echo -e "\033[0;31m‚ùå Nginx –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\033[0m"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo -e "\033[1;33müîå –ü–æ—Ä—Ç—ã:\033[0m"
if ss -tlnp 2>/dev/null | grep -q ":8000"; then
    echo -e "\033[0;32m‚úÖ Backend (8000) –∞–∫—Ç–∏–≤–µ–Ω\033[0m"
else
    echo -e "\033[0;31m‚ùå Backend (8000) –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω\033[0m"
fi

if ss -tlnp 2>/dev/null | grep -q ":80"; then
    echo -e "\033[0;32m‚úÖ Nginx (80) –∞–∫—Ç–∏–≤–µ–Ω\033[0m"
else
    echo -e "\033[0;31m‚ùå Nginx (80) –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω\033[0m"
fi

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
echo ""
echo -e "\033[1;33müíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:\033[0m"
df -h / | tail -1 | awk '{print "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: " $3 " –∏–∑ " $2 " (" $5 ")"}'

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
echo -e "\033[1;33müß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:\033[0m"
free -h | grep "Mem:" | awk '{print "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: " $3 " –∏–∑ " $2}'
EOF
        ;;
        
    start)
        log "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $SERVER_IP..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
if pm2 list | grep -q "role-backend.*online"; then
    echo -e "\033[1;33m–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ\033[0m"
    exit 0
fi

cd /home/yc-user/role
pm2 start ecosystem.config.js

if ! sudo systemctl is-active --quiet nginx; then
    sudo systemctl start nginx
fi

echo -e "\033[0;32m‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ\033[0m"
EOF
        ;;
        
    stop)
        log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $SERVER_IP..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
pm2 stop role-backend || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ PM2"
echo -e "\033[0;32m‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ\033[0m"
EOF
        ;;
        
    restart)
        log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $SERVER_IP..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
pm2 restart role-backend || exit 1
sudo systemctl reload nginx
echo -e "\033[0;32m‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ\033[0m"
EOF
        ;;
        
    logs)
        LINES=${COMMAND_ARGS:-50}
        log "üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ($LINES —Å—Ç—Ä–æ–∫)..."
        check_connection
        $SSH_CMD $SSH_TARGET "pm2 logs role-backend --lines $LINES"
        ;;
        
    logs-live)
        log "üìã –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–≥–∞–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
        log "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞"
        check_connection
        $SSH_CMD $SSH_TARGET "pm2 logs role-backend"
        ;;
        
    monitor)
        log "üìä –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞ PM2..."
        log "–ù–∞–∂–º–∏—Ç–µ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∞"
        check_connection
        $SSH_CMD -t $SSH_TARGET "pm2 monit"
        ;;
        
    backup)
        log "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $SERVER_IP..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
if [ -f "/opt/backup-role.sh" ]; then
    /opt/backup-role.sh
    echo -e "\033[0;32m‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞\033[0m"
else
    echo -e "\033[0;31m‚ùå –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω\033[0m"
    exit 1
fi
EOF
        ;;
        
    health)
        log "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $SERVER_IP..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
echo -e "\033[0;34müè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\033[0m"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
if pm2 list | grep -q "role-backend.*online"; then
    echo -e "\033[0;32m‚úÖ PM2: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ\033[0m"
else
    echo -e "\033[0;31m‚ùå PM2: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ\033[0m"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API
if curl -s http://localhost:8000/docs > /dev/null; then
    echo -e "\033[0;32m‚úÖ API: –î–æ—Å—Ç—É–ø–Ω–æ\033[0m"
else
    echo -e "\033[0;31m‚ùå API: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ\033[0m"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —á–µ—Ä–µ–∑ Nginx
if curl -s http://localhost/ > /dev/null; then
    echo -e "\033[0;32m‚úÖ Web: –î–æ—Å—Ç—É–ø–Ω–æ\033[0m"
else
    echo -e "\033[0;31m‚ùå Web: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ\033[0m"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ -f "/home/yc-user/role/backend/database.db" ]; then
    echo -e "\033[0;32m‚úÖ Database: –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\033[0m"
else
    echo -e "\033[0;31m‚ùå Database: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω\033[0m"
    exit 1
fi

echo ""
echo -e "\033[0;32müéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!\033[0m"
EOF
        ;;
        
    info)
        log "‚ÑπÔ∏è  –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
echo -e "\033[0;34m‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ\033[0m"
echo ""

# –í–µ—Ä—Å–∏—è –û–°
echo -e "\033[1;33müñ•Ô∏è  –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:\033[0m"
lsb_release -d | cut -f2

# –í–µ—Ä—Å–∏–∏ –ü–û
echo -e "\033[1;33müêç Python:\033[0m"
python3 --version 2>/dev/null || echo "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo -e "\033[1;33müì¶ Node.js:\033[0m"
node --version 2>/dev/null || echo "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo -e "\033[1;33müîß PM2:\033[0m"
pm2 --version 2>/dev/null || echo "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo -e "\033[1;33müåê Nginx:\033[0m"
nginx -v 2>&1 | cut -d' ' -f3 || echo "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
if [ -d "/home/yc-user/role" ]; then
    echo ""
    echo -e "\033[1;33müìÅ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\033[0m"
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: /home/yc-user/role"
    
    cd /home/yc-user/role
    if [ -d ".git" ]; then
        echo "–¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $(git rev-parse --short HEAD)"
        echo "–í–µ—Ç–∫–∞: $(git branch --show-current)"
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log --format='%s' -n 1)"
    fi
fi

# Uptime
echo ""
echo -e "\033[1;33m‚è∞ Uptime —Å–∏—Å—Ç–µ–º—ã:\033[0m"
uptime -p
EOF
        ;;
        
    nginx)
        ACTION=${COMMAND_ARGS// /}
        case $ACTION in
            status)
                log "üåê –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ Nginx..."
                check_connection
                $SSH_CMD $SSH_TARGET "sudo systemctl status nginx --no-pager"
                ;;
            restart)
                log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx..."
                check_connection
                $SSH_CMD $SSH_TARGET "sudo nginx -t && sudo systemctl restart nginx && echo '‚úÖ Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω'"
                ;;
            reload)
                log "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
                check_connection
                $SSH_CMD $SSH_TARGET "sudo nginx -t && sudo systemctl reload nginx && echo '‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞'"
                ;;
            *)
                error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è nginx: $ACTION. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: status, restart, reload"
                ;;
        esac
        ;;
        
    cleanup)
        log "üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
        check_connection
        $SSH_CMD $SSH_TARGET << 'EOF'
# –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ PM2
pm2 flush

# –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
sudo journalctl --vacuum-time=7d

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
if [ -d "/opt/backups" ]; then
    find /opt/backups -name "*.db" -mtime +30 -delete
    find /opt/backups -name "*.tar.gz" -mtime +30 -delete
fi

echo -e "\033[0;32m‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\033[0m"
EOF
        ;;
        
    shell)
        log "üêö –û—Ç–∫—Ä—ã—Ç–∏–µ SSH —Å–µ—Å—Å–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $SERVER_IP..."
        check_connection
        $SSH_CMD -t $SSH_TARGET
        ;;
        
    *)
        error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $COMMAND. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 --help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
        ;;
esac
