#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏
"""

from app.parsers.txt_parser import TxtParser

def test_normalization_debug():
    parser = TxtParser()
    
    print("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –û–¢–õ–ê–î–ö–ò –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    file_path = '../books/txt/groza.txt'
    
    print(f"üìñ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª: {file_path}")
    print("üëÄ –°–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –≤—ã–≤–æ–¥ –Ω–∏–∂–µ:")
    print()
    
    try:
        result = parser.parse_to_structured_content(file_path)
        print()
        print("‚úÖ –¢–ï–°–¢ –ü–†–û–®–ï–õ –£–°–ü–ï–®–ù–û!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(result.elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        print()
        print("üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É: backend/logs/groza/")
        print("üìÑ –ò—â–∏—Ç–µ —Ñ–∞–π–ª—ã: 01_raw_content_*.txt, 02_normalized_content_*.txt, 03_comparison_*.txt")
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_normalization_debug()
