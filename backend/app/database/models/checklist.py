"""
–ú–æ–¥–µ–ª–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —á–µ–∫–ª–∏—Å—Ç–æ–≤
"""

from sqlalchemy import Column, Integer, String, Text, ForeignKey, DateTime, Enum, Boolean, JSON
from sqlalchemy.orm import relationship
from sqlalchemy.sql import func
import enum

from .base import BaseModel
from .character import Character


class SourceType(enum.Enum):
    """–ò—Å—Ç–æ—á–Ω–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å"""
    FOUND_IN_TEXT = "FOUND_IN_TEXT"        # –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–∫—Å—Ç–µ
    LOGICALLY_DERIVED = "LOGICALLY_DERIVED"  # –ª–æ–≥–∏—á–µ—Å–∫–∏ –≤—ã–≤–µ–¥–µ–Ω–æ
    IMAGINED = "IMAGINED"                   # –ø—Ä–∏–¥—É–º–∞–Ω–æ


class Checklist(BaseModel):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å —á–µ–∫–ª–∏—Å—Ç–∞ (—Ñ–∏–∑–∏—á–µ—Å–∫–∏–π, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ —Ç.–¥.)
    """
    __tablename__ = "checklists"
    
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, "physical-portrait")
    external_id = Column(String(100), unique=True, nullable=False)
    
    title = Column(String(500), nullable=False)  # "–§–∏–∑–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
    description = Column(Text)  # –û–ø–∏—Å–∞–Ω–∏–µ —á–µ–∫–ª–∏—Å—Ç–∞
    slug = Column(String(100), unique=True, nullable=False)  # "physical-portrait"
    icon = Column(String(50))  # "üé≠" –∏–ª–∏ –∏–∫–æ–Ω–∫–∞
    order_index = Column(Integer, default=0)  # –ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    is_active = Column(Boolean, default=True)
    
    # –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤
    goal = Column(Text)  # –¶–µ–ª—å —á–µ–∫–ª–∏—Å—Ç–∞
    
    # –ü–æ–ª—è –¥–ª—è –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    file_hash = Column(String(64))  # SHA-256 —Ö–µ—à JSON —Ñ–∞–π–ª–∞
    version = Column(String(20), default="1.0.0")  # –í–µ—Ä—Å–∏—è —á–µ–∫–ª–∏—Å—Ç–∞
    
    # Relationships
    sections = relationship("ChecklistSection", back_populates="checklist", cascade="all, delete-orphan")


class ChecklistSection(BaseModel):
    """
    –°–µ–∫—Ü–∏—è —á–µ–∫–ª–∏—Å—Ç–∞ (—Ç–µ–º–∞)
    –ù–∞–ø—Ä–∏–º–µ—Ä: "1. –í–ù–ï–®–ù–û–°–¢–¨ –ò –§–ò–ó–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï"
    """
    __tablename__ = "checklist_sections"
    
    checklist_id = Column(Integer, ForeignKey("checklists.id"), nullable=False)
    
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, "appearance")
    external_id = Column(String(100), nullable=False)
    
    title = Column(String(500), nullable=False)  # "–í–ù–ï–®–ù–û–°–¢–¨ –ò –§–ò–ó–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï"
    number = Column(String(10))  # "1"
    icon = Column(String(50))  # "üìè"
    order_index = Column(Integer, default=0)
    
    # Relationships
    checklist = relationship("Checklist", back_populates="sections")
    subsections = relationship("ChecklistSubsection", back_populates="section", cascade="all, delete-orphan")


class ChecklistSubsection(BaseModel):
    """
    –ü–æ–¥—Å–µ–∫—Ü–∏—è —á–µ–∫–ª–∏—Å—Ç–∞ (—Ä–∞–∑–¥–µ–ª —Ç–µ–º—ã)
    –ù–∞–ø—Ä–∏–º–µ—Ä: "1.1 –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ –∏ –∞–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏—è"
    """
    __tablename__ = "checklist_subsections"
    
    section_id = Column(Integer, ForeignKey("checklist_sections.id"), nullable=False)
    
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, "physique")
    external_id = Column(String(100), nullable=False)
    
    title = Column(String(500), nullable=False)  # "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ –∏ –∞–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏—è"
    number = Column(String(20))  # "1.1"
    order_index = Column(Integer, default=0)
    
    # –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤
    examples = Column(Text)  # –ü—Ä–∏–º–µ—Ä—ã –∏–∑ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã
    why_important = Column(Text)  # –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ
    
    # Relationships
    section = relationship("ChecklistSection", back_populates="subsections")
    question_groups = relationship("ChecklistQuestionGroup", back_populates="subsection", cascade="all, delete-orphan")


class ChecklistQuestionGroup(BaseModel):
    """
    –ì—Ä—É–ø–ø–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –ø–æ–¥—Å–µ–∫—Ü–∏–∏
    –ù–∞–ø—Ä–∏–º–µ—Ä: "–†–æ—Å—Ç –∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ —Ç–µ–ª–∞"
    """
    __tablename__ = "checklist_question_groups"
    
    subsection_id = Column(Integer, ForeignKey("checklist_subsections.id"), nullable=False)
    
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, "height-proportions")
    external_id = Column(String(100), nullable=False)
    
    title = Column(String(500), nullable=False)  # "–†–æ—Å—Ç –∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ —Ç–µ–ª–∞"
    order_index = Column(Integer, default=0)
    
    # Relationships
    subsection = relationship("ChecklistSubsection", back_populates="question_groups")
    questions = relationship("ChecklistQuestion", back_populates="question_group", cascade="all, delete-orphan")


class ChecklistAnswer(BaseModel):
    """
    –í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å —á–µ–∫–ª–∏—Å—Ç–∞
    """
    __tablename__ = "checklist_answers"
    
    question_id = Column(Integer, ForeignKey("checklist_questions.id"), nullable=False)
    
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, "short", "average", "tall")
    external_id = Column(String(100), nullable=False)
    
    # –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª–æ–≤
    value_male = Column(String(500), nullable=False)  # "–≤—ã—Å–æ–∫–∏–π"
    value_female = Column(String(500), nullable=False)  # "–≤—ã—Å–æ–∫–∞—è"
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª–æ–≤
    exported_value_male = Column(Text)  # "–Ø –≤—ã—Å–æ–∫–∏–π"
    exported_value_female = Column(Text)  # "–Ø –≤—ã—Å–æ–∫–∞—è"
    
    # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∞–∫—Ç–µ—Ä–∞
    hint = Column(Text)  # "–†–æ—Å—Ç –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ"
    
    order_index = Column(Integer, default=0)
    
    # Relationships
    question = relationship("ChecklistQuestion", back_populates="answers")
    responses = relationship("ChecklistResponse", back_populates="answer", cascade="all, delete-orphan")


class ChecklistQuestion(BaseModel):
    """
    –û—Ç–¥–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å –≤ –≥—Ä—É–ø–ø–µ
    """
    __tablename__ = "checklist_questions"
    
    question_group_id = Column(Integer, ForeignKey("checklist_question_groups.id"), nullable=False)
    
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–∑ JSON (–Ω–∞–ø—Ä–∏–º–µ—Ä, "height", "weight")
    external_id = Column(String(100), nullable=False)
    
    text = Column(Text, nullable=False)  # –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
    order_index = Column(Integer, default=0)
    
    # –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    answer_type = Column(String(20), default="single")  # "single", "multiple"
    source_type = Column(String(50))  # "text", "logic", "imagination"
    
    # Relationships
    question_group = relationship("ChecklistQuestionGroup", back_populates="questions")
    answers = relationship("ChecklistAnswer", back_populates="question", cascade="all, delete-orphan")
    responses = relationship("ChecklistResponse", back_populates="question", cascade="all, delete-orphan")


class ChecklistResponse(BaseModel):
    """
    –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å —á–µ–∫–ª–∏—Å—Ç–∞
    """
    __tablename__ = "checklist_responses"
    
    question_id = Column(Integer, ForeignKey("checklist_questions.id"), nullable=False)
    character_id = Column(Integer, ForeignKey("characters.id"), nullable=False)
    answer_id = Column(Integer, ForeignKey("checklist_answers.id"), nullable=True)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç
    answer_text = Column(Text)  # –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç (–¥–ª—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤–≤–æ–¥–∞)
    source_type = Column(Enum(SourceType))  # –¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞
    comment = Column(Text)  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (—Ü–∏—Ç–∞—Ç–∞, –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –∏ —Ç.–¥.)
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    is_current = Column(Boolean, default=True)  # –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π
    version = Column(Integer, default=1)  # –ù–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ –æ—Ç–≤–µ—Ç–∞
    
    # Relationships
    question = relationship("ChecklistQuestion", back_populates="responses")
    character = relationship("Character", back_populates="checklist_responses")
    answer = relationship("ChecklistAnswer", back_populates="responses")


class ChecklistResponseHistory(BaseModel):
    """
    –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—Ç–≤–µ—Ç–æ–≤ (–≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ)
    """
    __tablename__ = "checklist_response_history"
    
    response_id = Column(Integer, ForeignKey("checklist_responses.id"), nullable=False)
    
    # –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    previous_answer = Column(Text)
    previous_source_type = Column(Enum(SourceType))
    previous_comment = Column(Text)
    previous_version = Column(Integer)
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    change_reason = Column(String(200))  # –ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    created_at = Column(DateTime(timezone=True), server_default=func.now())
    
    # Relationships
    response = relationship("ChecklistResponse")
