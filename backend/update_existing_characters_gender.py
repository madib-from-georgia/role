#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
"""

import sys
import os
from sqlalchemy.orm import Session

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'app'))

from app.database.connection import get_db
from app.database.crud import character as character_crud
from app.services.nlp.gender_detector import GenderDetector
from app.database.models.character import GenderEnum


def update_characters_gender():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π."""
    print("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_gen = get_db()
    db: Session = next(db_gen)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä –ø–æ–ª–∞
        gender_detector = GenderDetector()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Å null gender
        characters = db.query(character_crud.model).filter(
            character_crud.model.gender.is_(None)
        ).all()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(characters)} –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª–∞")
        
        updated_count = 0
        
        for character in characters:
            try:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑ speech_attribution
                description = None
                if character.speech_attribution and isinstance(character.speech_attribution, dict):
                    description = character.speech_attribution.get('description')
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª
                gender = gender_detector.detect_gender(
                    name=character.name,
                    description=description
                )
                
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ enum –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                if gender.value == "male":
                    db_gender = GenderEnum.MALE
                elif gender.value == "female":
                    db_gender = GenderEnum.FEMALE
                else:
                    db_gender = GenderEnum.UNKNOWN
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                character.gender = db_gender
                db.commit()
                
                confidence = gender_detector.get_confidence_score(character.name, description)
                print(f"‚úÖ {character.name}: {gender.value} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f})")
                
                updated_count += 1
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ '{character.name}': {e}")
                db.rollback()
        
        print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        remaining_null = db.query(character_crud.model).filter(
            character_crud.model.gender.is_(None)
        ).count()
        
        print(f"üìä –ü–µ—Ä—Å–æ–Ω–∞–∂–µ–π –±–µ–∑ –ø–æ–ª–∞: {remaining_null}")
        
        if remaining_null == 0:
            print("‚ú® –í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        
        return updated_count
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        db.rollback()
        return 0
    finally:
        db.close()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
    print("=" * 50)
    
    try:
        updated = update_characters_gender()
        
        if updated > 0:
            print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated} –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
            return 0
        else:
            print("\n‚ö†Ô∏è  –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –Ω–µ –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            return 1
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        return 1


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)