#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Role –Ω–∞ Yandex Cloud
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ò–ó–ú–ï–ù–ò–¢–ï –≠–¢–ò –ó–ù–ê–ß–ï–ù–ò–Ø)
SERVER_IP="51.250.4.162"                    # IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
SERVER_USER="yc-user"            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
SSH_KEY=""                      # –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
REPO_URL="https://github.com/madib-from-georgia/role.git"                     # URL Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
DOMAIN=""                       # –î–æ–º–µ–Ω –∏–ª–∏ IP –¥–ª—è Nginx
BRANCH="main"                   # –í–µ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        --server)
            SERVER_IP="$2"
            shift 2
            ;;
        --user)
            SERVER_USER="$2"
            shift 2
            ;;
        --key)
            SSH_KEY="$2"
            shift 2
            ;;
        --repo)
            REPO_URL="$2"
            shift 2
            ;;
        --domain)
            DOMAIN="$2"
            shift 2
            ;;
        --branch)
            BRANCH="$2"
            shift 2
            ;;
        -h|--help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo "–û–ø—Ü–∏–∏:"
            echo "  --server IP     IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞"
            echo "  --user USER     –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: yc-user)"
            echo "  --key PATH      –ü—É—Ç—å –∫ SSH –∫–ª—é—á—É"
            echo "  --repo URL      URL Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
            echo "  --domain DOMAIN –î–æ–º–µ–Ω –∏–ª–∏ IP –¥–ª—è Nginx"
            echo "  --branch BRANCH –í–µ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: main)"
            echo "  -h, --help      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä:"
            echo "  $0 --server 1.2.3.4 --repo https://github.com/user/role.git --domain example.com"
            exit 0
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ -z "$SERVER_IP" ]; then
    error "–ù–µ —É–∫–∞–∑–∞–Ω IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --server IP"
fi

if [ -z "$REPO_URL" ]; then
    error "–ù–µ —É–∫–∞–∑–∞–Ω URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --repo URL"
fi

if [ -z "$DOMAIN" ]; then
    DOMAIN="$SERVER_IP"
    warn "–î–æ–º–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è IP —Å–µ—Ä–≤–µ—Ä–∞: $DOMAIN"
fi

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ SSH –∫–æ–º–∞–Ω–¥—ã
SSH_CMD="ssh"
if [ ! -z "$SSH_KEY" ]; then
    if [ ! -f "$SSH_KEY" ]; then
        error "SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY"
    fi
    SSH_CMD="ssh -i $SSH_KEY"
fi

SSH_TARGET="$SERVER_USER@$SERVER_IP"

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Role"
log "üì° –°–µ—Ä–≤–µ—Ä: $SSH_TARGET"
log "üåê –î–æ–º–µ–Ω: $DOMAIN"
log "üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL"
log "üåø –í–µ—Ç–∫–∞: $BRANCH"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! $SSH_CMD -o ConnectTimeout=10 $SSH_TARGET "echo '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ'" 2>/dev/null; then
    error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SSH_TARGET"
fi

log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
log "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

DEPLOY_SCRIPT=$(cat << 'EOF'
#!/bin/bash

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
REPO_URL="$1"
DOMAIN="$2"
BRANCH="$3"
APP_DIR="/home/yc-user/role"
PYTHON_VERSION="3.11"

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
log "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.11
log "üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${PYTHON_VERSION}..."
sudo apt install -y software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa -y
sudo apt update
sudo apt install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-venv python${PYTHON_VERSION}-dev python3-pip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18..."
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt install -y nodejs

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
log "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt install -y git nginx certbot python3-certbot-nginx curl build-essential htop

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2
log "üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
sudo npm install -g pm2

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
log "üìÅ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
if [ -d "$APP_DIR" ]; then
    warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $APP_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è–µ–º..."
    rm -rf $APP_DIR
fi

git clone $REPO_URL $APP_DIR

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd $APP_DIR
git checkout $BRANCH

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python
log "üêç –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
python${PYTHON_VERSION} -m venv .venv
source .venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
cd backend
pip install --upgrade pip
pip install -r requirements.txt

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
log "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f .env ]; then
    cp .env.example .env
    sed -i 's/ENVIRONMENT=development/ENVIRONMENT=production/' .env
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p uploads cache

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cd $APP_DIR

# –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö SQLite
log "üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite..."
cd backend
touch database.db
log "‚úÖ –§–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω"

# –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ Alembic –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å PYTHONPATH
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
warn "‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏–∏ Alembic –ø—Ä–æ–ø—É—â–µ–Ω—ã - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"

# –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
warn "‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø—É—â–µ–Ω–æ - –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ API"

cd $APP_DIR

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Node.js –∏ —Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Node.js –∏ —Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
cd frontend
npm install

# –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–±—Ä–∞—Ç—å —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è - –±–µ–∑ –Ω–µ—ë
log "üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
if npm run build 2>/dev/null; then
    log "‚úÖ –°–±–æ—Ä–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
    warn "‚ö†Ô∏è –°–±–æ—Ä–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤ –Ω–µ —É–¥–∞–ª–∞—Å—å, —Å–æ–±–∏—Ä–∞–µ–º –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    # –°–æ–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Vite, –ø—Ä–æ–ø—É—Å–∫–∞—è TypeScript –ø—Ä–æ–≤–µ—Ä–∫—É
    npx vite build
    log "‚úÖ –°–±–æ—Ä–∫–∞ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
fi
cd ..

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2
log "üîß –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2..."
cat > ecosystem.config.js << EOFPM2
module.exports = {
  apps: [
    {
      name: 'role-backend',
      cwd: '$APP_DIR/backend',
      script: '$APP_DIR/.venv/bin/python',
      args: '-m uvicorn app.main:app --host 0.0.0.0 --port 8000',
      env: {
        ENVIRONMENT: 'production'
      },
      instances: 1,
      autorestart: true,
      watch: false,
      max_memory_restart: '1G',
      error_file: '/var/log/pm2/role-backend-error.log',
      out_file: '/var/log/pm2/role-backend-out.log',
      log_file: '/var/log/pm2/role-backend.log'
    }
  ]
};
EOFPM2

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤ PM2
sudo mkdir -p /var/log/pm2
sudo chown yc-user:yc-user /var/log/pm2

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ PM2
log "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
pm2 start ecosystem.config.js
pm2 save
pm2 startup

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
log "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
sudo tee /etc/nginx/sites-available/role-app > /dev/null << EOFNGINX
server {
    listen 80;
    server_name $DOMAIN;

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    location / {
        root $APP_DIR/frontend/dist;
        try_files \$uri \$uri/ /index.html;
        
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # API –±—ç–∫–µ–Ω–¥–∞
    location /api/ {
        proxy_pass http://127.0.0.1:8000/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        client_max_body_size 100M;
    }

    # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API
    location /docs {
        proxy_pass http://127.0.0.1:8000/docs;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /openapi.json {
        proxy_pass http://127.0.0.1:8000/openapi.json;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOFNGINX

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
sudo ln -sf /etc/nginx/sites-available/role-app /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default
sudo nginx -t && sudo systemctl restart nginx

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
log "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
sudo ufw allow ssh
sudo ufw allow 'Nginx Full'
sudo ufw --force enable

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
log "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
sudo tee /opt/backup-role.sh > /dev/null << 'EOFBACKUP'
#!/bin/bash
BACKUP_DIR="/opt/backups"
DATE=$(date +%Y%m%d_%H%M%S)

mkdir -p $BACKUP_DIR

if [ -f "/home/yc-user/role/backend/database.db" ]; then
    cp /home/yc-user/role/backend/database.db $BACKUP_DIR/database_$DATE.db
fi

if [ -d "/home/yc-user/role/backend/uploads" ]; then
    tar -czf $BACKUP_DIR/uploads_$DATE.tar.gz -C /home/yc-user/role/backend uploads/
fi

find $BACKUP_DIR -name "*.db" -mtime +30 -delete
find $BACKUP_DIR -name "*.tar.gz" -mtime +30 -delete

echo "Backup completed: $DATE"
EOFBACKUP

sudo chmod +x /opt/backup-role.sh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
(crontab -l 2>/dev/null; echo "0 2 * * * /opt/backup-role.sh >> /var/log/backup.log 2>&1") | crontab -

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤..."
if ! pm2 list | grep -q "role-backend.*online"; then
    error "Backend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
fi

if ! curl -s http://localhost:8000/docs > /dev/null; then
    warn "API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
fi

log "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:     http://$DOMAIN/"
echo "üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:  http://$DOMAIN/docs"
echo "üîß API —ç–Ω–¥–ø–æ–∏–Ω—Ç:      http://$DOMAIN/api/"
EOF
)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
log "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ..."
echo "$DEPLOY_SCRIPT" | $SSH_CMD $SSH_TARGET "cat > /tmp/deploy-script.sh && chmod +x /tmp/deploy-script.sh && /tmp/deploy-script.sh '$REPO_URL' '$DOMAIN' '$BRANCH'"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if [ $? -eq 0 ]; then
    log "‚úÖ –£–¥–∞–ª–µ–Ω–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo -e "${BLUE}üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://$DOMAIN${NC}"
    echo -e "${BLUE}üìö API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://$DOMAIN/docs${NC}"
    echo ""
    echo -e "${YELLOW}üìã –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:${NC}"
    echo -e "${YELLOW}  $SSH_CMD $SSH_TARGET${NC}"
    echo -e "${YELLOW}  pm2 status${NC}"
    echo -e "${YELLOW}  pm2 logs role-backend${NC}"
    echo ""
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL
    if [[ "$DOMAIN" != "$SERVER_IP" ]]; then
        echo -e "${YELLOW}üí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:${NC}"
        echo -e "${YELLOW}   sudo certbot --nginx -d $DOMAIN${NC}"
    fi
else
    error "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π"
fi
