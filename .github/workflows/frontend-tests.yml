name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-tests.yml'

env:
  NODE_VERSION: '16.14.0'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run unit tests
      run: npm run test:run

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: frontend/coverage/lcov.info
        directory: frontend/coverage/
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

    - name: Upload coverage to artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: frontend/coverage/
        retention-days: 30

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test
    
    defaults:
      run:
        working-directory: frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level high --json | jq '.vulnerabilities | length' | grep -v '^0$'; then
          echo "High severity vulnerabilities found!"
          npm audit --audit-level high
          exit 1
        fi
