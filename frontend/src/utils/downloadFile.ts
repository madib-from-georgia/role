/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑ Blob –¥–∞–Ω–Ω—ã—Ö
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
 */

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–±–∏–ª—å–Ω—ã–º
 */
export const isMobileDevice = (): boolean => {
  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
};

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±—Ä–∞—É–∑–µ—Ä Safari –Ω–∞ iOS
 */
export const isIOSSafari = (): boolean => {
  const ua = navigator.userAgent;
  return /iPad|iPhone|iPod/.test(ua) && /Safari/.test(ua) && !/CriOS|FxiOS|OPiOS|mercury/.test(ua);
};

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç MIME-—Ç–∏–ø —Ñ–∞–π–ª–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
 */
const getMimeType = (fileName: string): string => {
  const extension = fileName.split('.').pop()?.toLowerCase();
  
  const mimeTypes: Record<string, string> = {
    'pdf': 'application/pdf',
    'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    'doc': 'application/msword',
    'txt': 'text/plain',
    'html': 'text/html',
    'json': 'application/json',
    'xml': 'application/xml',
    'zip': 'application/zip',
    'png': 'image/png',
    'jpg': 'image/jpeg',
    'jpeg': 'image/jpeg',
    'gif': 'image/gif',
    'svg': 'image/svg+xml'
  };
  
  return mimeTypes[extension || ''] || 'application/octet-stream';
};

/**
 * –°–æ–∑–¥–∞–µ—Ç blob —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º MIME-—Ç–∏–ø–æ–º
 */
const createTypedBlob = (blob: Blob, fileName: string): Blob => {
  const mimeType = getMimeType(fileName);
  
  // –ï—Å–ª–∏ blob —É–∂–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π MIME-—Ç–∏–ø, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (blob.type === mimeType) {
    return blob;
  }
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π blob —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º MIME-—Ç–∏–ø–æ–º
  return new Blob([blob], { type: mimeType });
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É Web Share API
 */
const isWebShareSupported = (): boolean => {
  return 'share' in navigator && 'canShare' in navigator;
};

/**
 * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ Web Share API (–¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤)
 */
const shareFile = async (blob: Blob, fileName: string): Promise<boolean> => {
  if (!isWebShareSupported()) {
    return false;
  }

  try {
    const file = new File([blob], fileName, { type: blob.type });
    
    if (navigator.canShare && navigator.canShare({ files: [file] })) {
      await navigator.share({
        files: [file],
        title: '–≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞',
        text: `–§–∞–π–ª: ${fileName}`
      });
      return true;
    }
  } catch (error) {
    console.log('Web Share API –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:', error);
  }
  
  return false;
};

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è iOS Safari
 */
const createDownloadModal = (url: string, fileName: string): void => {
  // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const modal = document.createElement('div');
  modal.style.cssText = `
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 10000;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    box-sizing: border-box;
  `;

  const content = document.createElement('div');
  content.style.cssText = `
    background: white;
    border-radius: 12px;
    padding: 24px;
    max-width: 400px;
    width: 100%;
    text-align: center;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  `;

  const title = document.createElement('h3');
  title.textContent = '–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞';
  title.style.cssText = `
    margin: 0 0 16px 0;
    color: #333;
    font-size: 18px;
  `;

  const instruction = document.createElement('p');
  instruction.innerHTML = `
    –î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ <strong>${fileName}</strong>:<br><br>
    1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ<br>
    2. –ù–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ñ–∞–π–ª<br>
    3. –í—ã–±–µ—Ä–∏—Ç–µ "–°–∫–∞—á–∞—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª" –∏–ª–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –§–∞–π–ª—ã"
  `;
  instruction.style.cssText = `
    margin: 0 0 20px 0;
    color: #666;
    line-height: 1.5;
    font-size: 14px;
  `;

  const downloadLink = document.createElement('a');
  downloadLink.href = url;
  downloadLink.download = fileName;
  downloadLink.textContent = `üìÑ ${fileName}`;
  downloadLink.style.cssText = `
    display: inline-block;
    background: #007bff;
    color: white;
    padding: 12px 24px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    margin-bottom: 16px;
  `;

  const closeButton = document.createElement('button');
  closeButton.textContent = '–ó–∞–∫—Ä—ã—Ç—å';
  closeButton.style.cssText = `
    background: #6c757d;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
  `;

  closeButton.onclick = () => {
    modal.remove();
    window.URL.revokeObjectURL(url);
  };

  content.appendChild(title);
  content.appendChild(instruction);
  content.appendChild(downloadLink);
  content.appendChild(closeButton);
  modal.appendChild(content);
  document.body.appendChild(modal);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    if (document.body.contains(modal)) {
      modal.remove();
      window.URL.revokeObjectURL(url);
    }
  }, 30000);
};

/**
 * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —á–µ—Ä–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∏–µ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
 */
const downloadFileMobile = async (blob: Blob, fileName: string) => {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º Web Share API
  const shared = await shareFile(blob, fileName);
  if (shared) {
    return;
  }

  const url = window.URL.createObjectURL(blob);
  
  // –î–ª—è iOS Safari –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥
  if (isIOSSafari()) {
    // –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
    const newWindow = window.open(url, '_blank');
    
    // –ï—Å–ª–∏ –æ–∫–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã–ª–æ—Å—å (–±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –ø–æ–ø–∞–ø–æ–≤), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (!newWindow) {
      createDownloadModal(url, fileName);
      return;
    }
    
    // –û—á–∏—â–∞–µ–º URL —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
      window.URL.revokeObjectURL(url);
    }, 2000);
    
    return;
  }
  
  // –î–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ –ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥
  const link = document.createElement('a');
  link.href = url;
  link.download = fileName;
  
  // –î–µ–ª–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–µ–≤–∏–¥–∏–º–æ–π, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM
  link.style.display = 'none';
  document.body.appendChild(link);
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const clickEvent = new MouseEvent('click', {
    view: window,
    bubbles: true,
    cancelable: true
  });
  
  link.dispatchEvent(clickEvent);
  
  // –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
  setTimeout(() => {
    link.remove();
    window.URL.revokeObjectURL(url);
  }, 100);
};

/**
 * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
 */
const downloadFileDesktop = (blob: Blob, fileName: string) => {
  // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è blob
  const url = window.URL.createObjectURL(blob);
  
  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  const link = document.createElement('a');
  link.href = url;
  link.download = fileName;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ DOM –∏ –∫–ª–∏–∫–∞–µ–º
  document.body.appendChild(link);
  link.click();
  
  // –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
  link.remove();
  window.URL.revokeObjectURL(url);
};

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–µ—Ç–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 */
export const downloadFile = async (blob: Blob, fileName: string) => {
  // –°–æ–∑–¥–∞–µ–º blob —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º MIME-—Ç–∏–ø–æ–º
  const typedBlob = createTypedBlob(blob, fileName);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  if (!isDownloadSupported()) {
    // –ï—Å–ª–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
    const url = window.URL.createObjectURL(typedBlob);
    window.open(url, '_blank');
    setTimeout(() => window.URL.revokeObjectURL(url), 1000);
    return;
  }
  
  // –í—ã–±–∏—Ä–∞–µ–º –º–µ—Ç–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  if (isMobileDevice()) {
    await downloadFileMobile(typedBlob, fileName);
  } else {
    downloadFileDesktop(typedBlob, fileName);
  }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ response
 */
export const extractFileName = (
  contentDisposition: string | null,
  defaultName: string,
  format: string
): string => {
  if (contentDisposition) {
    const fileNameMatch = contentDisposition.match(/filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/);
    if (fileNameMatch && fileNameMatch[1]) {
      return fileNameMatch[1].replace(/['"]/g, '');
    }
  }
  
  const timestamp = new Date().toISOString().slice(0, 16).replace(/[:-]/g, '');
  return `${defaultName}_${timestamp}.${format}`;
};

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export const formatFileSize = (bytes: number): string => {
  if (bytes === 0) return '0 Bytes';
  
  const k = 1024;
  const sizes = ['Bytes', 'KB', 'MB', 'GB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –±—Ä–∞—É–∑–µ—Ä–æ–º
 */
export const isDownloadSupported = (): boolean => {
  const link = document.createElement('a');
  return typeof link.download !== 'undefined';
};
