import React from 'react';

interface OverallProgressProps {
  progress: any[];
  character: any;
}

export const OverallProgress: React.FC<OverallProgressProps> = ({
  progress,
  character
}) => {
  if (!progress || progress.length === 0) {
    return (
      <div className="overall-progress overall-progress--empty">
        <div className="overall-progress__content">
          <h2>–ù–∞—á–Ω–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h2>
          <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —á–µ–∫–ª–∏—Å—Ç—ã, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
        </div>
      </div>
    );
  }

  // Calculate overall stats
  const totalQuestions = progress.reduce((sum, p) => sum + p.total_questions, 0);
  const answeredQuestions = progress.reduce((sum, p) => sum + p.answered_questions, 0);
  const overallPercentage = totalQuestions > 0 ? Math.round((answeredQuestions / totalQuestions) * 100) : 0;
  
  const completedChecklists = progress.filter(p => p.completion_percentage === 100).length;
  const inProgressChecklists = progress.filter(p => p.completion_percentage > 0 && p.completion_percentage < 100).length;
  const notStartedChecklists = progress.filter(p => p.completion_percentage === 0).length;

  // Estimate time to completion (assuming 15 seconds per question)
  const remainingQuestions = totalQuestions - answeredQuestions;
  const estimatedMinutes = Math.ceil(remainingQuestions * 15 / 60);
  
  const getProgressMessage = () => {
    if (overallPercentage === 100) {
      return "–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!";
    } else if (overallPercentage >= 75) {
      return "–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä—ã–≤–æ–∫!";
    } else if (overallPercentage >= 50) {
      return "–ü–æ–ª–æ–≤–∏–Ω–∞ –ø—É—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞!";
    } else if (overallPercentage >= 25) {
      return "–•–æ—Ä–æ—à–µ–µ –Ω–∞—á–∞–ª–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!";
    } else if (overallPercentage > 0) {
      return "–ê–Ω–∞–ª–∏–∑ –Ω–∞—á–∞—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É!";
    }
    return "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑?";
  };

  return (
    <div className="overall-progress">
      <div className="overall-progress__header">
        <div className="overall-progress__character">
          <h2>–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {character?.name}</h2>
          <div className="character-importance">
            {character?.importance_score && (
              <span>–í–∞–∂–Ω–æ—Å—Ç—å: {Math.round(character.importance_score * 100)}%</span>
            )}
          </div>
        </div>
        <div className="overall-progress__message">
          {getProgressMessage()}
        </div>
      </div>

      <div className="overall-progress__stats">
        <div className="progress-stat">
          <div className="stat-number">{overallPercentage}%</div>
          <div className="stat-label">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</div>
        </div>
        
        <div className="progress-stat">
          <div className="stat-number">{answeredQuestions}</div>
          <div className="stat-label">–∏–∑ {totalQuestions} –≤–æ–ø—Ä–æ—Å–æ–≤</div>
        </div>
        
        <div className="progress-stat">
          <div className="stat-number">{completedChecklists}</div>
          <div className="stat-label">–∑–∞–≤–µ—Ä—à–µ–Ω–æ</div>
        </div>
        
        {remainingQuestions > 0 && (
          <div className="progress-stat">
            <div className="stat-number">~{estimatedMinutes}</div>
            <div className="stat-label">–º–∏–Ω –æ—Å—Ç–∞–ª–æ—Å—å</div>
          </div>
        )}
      </div>

      <div className="overall-progress__visual">
        <div className="progress-bar large">
          <div 
            className={`progress-fill ${
              overallPercentage === 100 ? 'completed' : 
              overallPercentage > 50 ? 'in-progress' : 'started'
            }`}
            style={{ width: `${overallPercentage}%` }}
          />
        </div>
        
        <div className="progress-breakdown">
          <div className="breakdown-item">
            <span className="dot completed"></span>
            {completedChecklists} –∑–∞–≤–µ—Ä—à–µ–Ω–æ
          </div>
          <div className="breakdown-item">
            <span className="dot in-progress"></span>
            {inProgressChecklists} –≤ —Ä–∞–±–æ—Ç–µ
          </div>
          <div className="breakdown-item">
            <span className="dot not-started"></span>
            {notStartedChecklists} –Ω–µ –Ω–∞—á–∞—Ç–æ
          </div>
        </div>
      </div>

      {overallPercentage === 100 && (
        <div className="overall-progress__celebration">
          <div className="celebration-content">
            üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–∞ 100%! üéâ
          </div>
        </div>
      )}
    </div>
  );
};
