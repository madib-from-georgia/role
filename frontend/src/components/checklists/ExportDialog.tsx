import React, { useState } from 'react';
import { useMutation, useQuery } from 'react-query';
import { exportApi } from '../../services/api';
import { downloadFile, extractFileName, formatFileSize } from '../../utils/downloadFile';

interface ExportDialogProps {
  characterId: number;
  characterName: string;
  onClose: () => void;
  isOpen: boolean;
}

export const ExportDialog: React.FC<ExportDialogProps> = ({
  characterId,
  characterName,
  onClose,
  isOpen
}) => {
  const [format, setFormat] = useState<'pdf' | 'docx'>('pdf');
  const [exportType, setExportType] = useState<'detailed' | 'summary' | 'compact'>('detailed');
  const [includeEmptyResponses, setIncludeEmptyResponses] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∏ —Ç–∏–ø—ã
  const { data: formats } = useQuery('export-formats', exportApi.getFormats);
  const { data: types } = useQuery('export-types', exportApi.getTypes);

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
  const exportMutation = useMutation(exportApi.exportCharacter, {
    onSuccess: (response) => {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—Ç–∏–ª–∏—Ç—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      downloadFile(response.data, response.fileName);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      const fileSize = formatFileSize(response.data.size);
      alert(`–§–∞–π–ª "${response.fileName}" (${fileSize}) —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!`);
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
      onClose();
    },
    onError: (error: any) => {
      console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:', error);
      
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Ñ–∞–π–ª–∞.';
      if (error.response?.status === 403) {
        errorMessage = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É.';
      } else if (error.response?.status === 404) {
        errorMessage = '–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω.';
      } else if (error.response?.status >= 500) {
        errorMessage = '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      }
      
      alert(errorMessage + ' –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  });

  const handleExport = () => {
    exportMutation.mutate({
      character_id: characterId,
      format,
      export_type: exportType,
      include_empty_responses: includeEmptyResponses
    });
  };

  if (!isOpen) return null;

  return (
    <div className="export-dialog-overlay">
      <div className="export-dialog">
        <div className="export-dialog__header">
          <h2>–≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h2>
          <button 
            className="export-dialog__close"
            onClick={onClose}
            disabled={exportMutation.isLoading}
          >
            √ó
          </button>
        </div>

        <div className="export-dialog__content">
          <div className="export-character-info">
            <h3>–ü–µ—Ä—Å–æ–Ω–∞–∂: <span className="character-name">{characterName}</span></h3>
            <p className="export-description">
              –°–æ–∑–¥–∞–π—Ç–µ –æ—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –ø–µ—á–∞—Ç–∏ –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
            </p>
          </div>

          <div className="export-options">
            {/* –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ */}
            <div className="export-option-group">
              <label className="export-label">–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:</label>
              <div className="export-radio-group">
                <label className="export-radio">
                  <input
                    type="radio"
                    value="pdf"
                    checked={format === 'pdf'}
                    onChange={(e) => setFormat(e.target.value as 'pdf')}
                    disabled={exportMutation.isLoading}
                  />
                  <span className="export-radio-label">
                    <strong>PDF</strong>
                    <small>–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –ø–µ—á–∞—Ç–∏</small>
                  </span>
                </label>
                <label className="export-radio">
                  <input
                    type="radio"
                    value="docx"
                    checked={format === 'docx'}
                    onChange={(e) => setFormat(e.target.value as 'docx')}
                    disabled={exportMutation.isLoading}
                  />
                  <span className="export-radio-label">
                    <strong>DOCX</strong>
                    <small>–î–æ–∫—É–º–µ–Ω—Ç Word –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</small>
                  </span>
                </label>
              </div>
            </div>

            {/* –í—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ */}
            <div className="export-option-group">
              <label className="export-label">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è:</label>
              <div className="export-radio-group">
                <label className="export-radio">
                  <input
                    type="radio"
                    value="detailed"
                    checked={exportType === 'detailed'}
                    onChange={(e) => setExportType(e.target.value as 'detailed')}
                    disabled={exportMutation.isLoading}
                  />
                  <span className="export-radio-label">
                    <strong>–ü–æ–¥—Ä–æ–±–Ω—ã–π</strong>
                    <small>–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏</small>
                  </span>
                </label>
                <label className="export-radio">
                  <input
                    type="radio"
                    value="summary"
                    checked={exportType === 'summary'}
                    onChange={(e) => setExportType(e.target.value as 'summary')}
                    disabled={exportMutation.isLoading}
                  />
                  <span className="export-radio-label">
                    <strong>–ö—Ä–∞—Ç–∫–∏–π</strong>
                    <small>–°–≤–æ–¥–∫–∞ –ø–æ —á–µ–∫–ª–∏—Å—Ç–∞–º —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π</small>
                  </span>
                </label>
                <label className="export-radio">
                  <input
                    type="radio"
                    value="compact"
                    checked={exportType === 'compact'}
                    onChange={(e) => setExportType(e.target.value as 'compact')}
                    disabled={exportMutation.isLoading}
                  />
                  <span className="export-radio-label">
                    <strong>–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π</strong>
                    <small>–¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</small>
                  </span>
                </label>
              </div>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ */}
            <div className="export-option-group">
              <label className="export-checkbox">
                <input
                  type="checkbox"
                  checked={includeEmptyResponses}
                  onChange={(e) => setIncludeEmptyResponses(e.target.checked)}
                  disabled={exportMutation.isLoading}
                />
                <span className="export-checkbox-label">
                  –í–∫–ª—é—á–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –±–µ–∑ –æ—Ç–≤–µ—Ç–æ–≤
                </span>
              </label>
            </div>
          </div>
        </div>

        <div className="export-dialog__footer">
          <button
            className="btn btn-secondary"
            onClick={onClose}
            disabled={exportMutation.isLoading}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            className="btn btn-primary"
            onClick={handleExport}
            disabled={exportMutation.isLoading}
          >
            {exportMutation.isLoading ? (
              <>
                <div className="spinner small"></div>
                –≠–∫—Å–ø–æ—Ä—Ç...
              </>
            ) : (
              <>
                üìÑ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å {format.toUpperCase()}
              </>
            )}
          </button>
        </div>
      </div>
    </div>
  );
};
