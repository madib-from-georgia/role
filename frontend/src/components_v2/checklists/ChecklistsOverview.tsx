import React from 'react';
import { useQuery } from 'react-query';
import { useParams, useNavigate } from 'react-router-dom';

import { checklistApi, charactersApi } from '../../services/api';
import { RecommendedNextStep } from './RecommendedNextStep';
import { ChecklistGroup } from './ChecklistGroup';
import { OverallProgress } from './OverallProgress';
import { ChecklistSwitcher } from './ChecklistSwitcher';

interface ChecklistsOverviewProps {}

export const ChecklistsOverview: React.FC<ChecklistsOverviewProps> = () => {
  const { characterId } = useParams<{ characterId: string }>();
  const navigate = useNavigate();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  const { data: character, isLoading: characterLoading } = useQuery({
    queryKey: ['character', characterId],
    queryFn: () => charactersApi.getById(characterId!),
    enabled: !!characterId
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–µ–∫–ª–∏—Å—Ç–æ–≤
  const { data: checklists, isLoading: checklistsLoading } = useQuery({
    queryKey: ['checklists'],
    queryFn: () => checklistApi.getAll(),
    staleTime: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç
  });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —á–µ–∫–ª–∏—Å—Ç–∞–º –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  const { data: progress } = useQuery({
    queryKey: ['checklist-progress', characterId],
    queryFn: () => checklistApi.getCharacterProgress(parseInt(characterId!)),
    enabled: !!characterId,
    staleTime: 2 * 60 * 1000, // 2 –º–∏–Ω—É—Ç—ã
  });

  if (!characterId || isNaN(parseInt(characterId))) {
    return (
      <div className="checklists-overview__error">
        <div className="error-content">
          <h1>–ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞</h1>
          <button onClick={() => navigate('/')} className="btn btn-primary">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    );
  }

  if (characterLoading || checklistsLoading) {
    return (
      <div className="checklists-overview__loading">
        <div className="loading-content">
          <div className="spinner"></div>
          <span>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...</span>
        </div>
      </div>
    );
  }

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —á–µ–∫–ª–∏—Å—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º
  const groupedChecklists = React.useMemo(() => {
    if (!checklists) {
      return { basic: [], advanced: [], psychological: [] };
    }

    const basic: any[] = [];
    const advanced: any[] = [];
    const psychological: any[] = [];

    checklists.forEach((checklist: any) => {
      const slug = checklist.slug.toLowerCase();
      
      // –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
      if (slug.includes('physical') || slug.includes('emotional') || slug.includes('speech')) {
        basic.push(checklist);
      }
      // –£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑  
      else if (slug.includes('internal') || slug.includes('motivation') || slug.includes('relationships') || 
               slug.includes('biography') || slug.includes('social') || slug.includes('scenes') || 
               slug.includes('tasks') || slug.includes('exercises')) {
        advanced.push(checklist);
      }
      // –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
      else if (slug.includes('subtext') || slug.includes('tempo') || slug.includes('personality') || 
               slug.includes('defense') || slug.includes('trauma') || slug.includes('archetypes') || 
               slug.includes('emotional-intelligence') || slug.includes('cognitive') || slug.includes('attachment')) {
        psychological.push(checklist);
      }
      // –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤ –±–∞–∑–æ–≤—ã–π
      else {
        basic.push(checklist);
      }
    });

    return { basic, advanced, psychological };
  }, [checklists]);

  return (
    <div className="checklists-overview">
      {/* Header */}
      <div className="checklists-overview__header">
        <button
          onClick={() => navigate(-1)}
          className="btn btn-secondary"
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>
        
        <div className="character-info">
          <h1>{character?.name}</h1>
          {character?.description && <p>{character.description}</p>}
        </div>
      </div>

      {/* Main Content */}
      <div className="checklists-overview__content">
        
        {/* Overall Progress */}
        <OverallProgress 
          progress={progress}
          character={character}
        />

        {/* Recommended Next Step */}
        <RecommendedNextStep 
          progress={progress}
          checklists={checklists}
          characterId={parseInt(characterId)}
        />

        {/* Checklist Groups */}
        <div className="checklist-groups">
          <ChecklistGroup
            title="–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑"
            description="–§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: –≤–Ω–µ—à–Ω–æ—Å—Ç—å, —ç–º–æ—Ü–∏–∏, —Ä–µ—á—å"
            checklists={groupedChecklists.basic}
            progress={progress}
            characterId={parseInt(characterId)}
            type="basic"
          />
          
          <ChecklistGroup
            title="–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑"
            description="–î–µ—Ç–∞–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞: –º–æ—Ç–∏–≤–∞—Ü–∏—è, –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –±–∏–æ–≥—Ä–∞—Ñ–∏—è"
            checklists={groupedChecklists.advanced}
            progress={progress}
            characterId={parseInt(characterId)}
            type="advanced"
          />
          
          <ChecklistGroup
            title="–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"
            description="–ì–ª—É–±–∏–Ω–Ω—ã–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã: –ø–æ–¥—Ç–µ–∫—Å—Ç, –∑–∞—â–∏—Ç—ã, —Ç—Ä–∞–≤–º—ã"
            checklists={groupedChecklists.psychological}
            progress={progress}
            characterId={parseInt(characterId)}
            type="psychological"
          />
        </div>

        {/* Quick Checklist Switcher */}
        <ChecklistSwitcher 
          characterId={parseInt(characterId)}
          currentChecklist={null}
        />
        
        {/* Success message */}
        <div style={{ padding: '2rem', textAlign: 'center' }}>
          <h2>üéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã!</h2>
          
          <div style={{ marginTop: '2rem', padding: '1rem', background: '#d1fae5', borderRadius: '0.5rem' }}>
            <ul style={{ listStyle: 'none', padding: 0 }}>
              <li>‚úÖ OverallProgress - –æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</li>
              <li>‚úÖ RecommendedNextStep - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —à–∞–≥</li>
              <li>‚úÖ ChecklistGroup - –≥—Ä—É–ø–ø—ã —á–µ–∫–ª–∏—Å—Ç–æ–≤</li>
              <li>‚úÖ ChecklistSwitcher - –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —á–µ–∫–ª–∏—Å—Ç–æ–≤</li>
            </ul>
          </div>
          
          <p style={{ marginTop: '1rem', color: '#6b7280' }}>
            –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ toggle –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, —á—Ç–æ–±—ã —Å—Ä–∞–≤–Ω–∏—Ç—å –Ω–æ–≤—ã–π –∏ —Å—Ç–∞—Ä—ã–π –¥–∏–∑–∞–π–Ω
          </p>
        </div>


      </div>
    </div>
  );
};
